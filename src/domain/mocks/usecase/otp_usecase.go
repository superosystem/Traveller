// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/superosystem/trainingsystem-backend/src/domain"
	mock "github.com/stretchr/testify/mock"
)

// OtpUsecase is an autogenerated mock type for the OtpUsecase type
type OtpUsecase struct {
	mock.Mock
}

// CheckOTP provides a mock function with given fields: otpDomain
func (_m *OtpUsecase) CheckOTP(otpDomain *domain.Otp) error {
	ret := _m.Called(otpDomain)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Otp) error); ok {
		r0 = rf(otpDomain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendOTP provides a mock function with given fields: otpDomain
func (_m *OtpUsecase) SendOTP(otpDomain *domain.Otp) error {
	ret := _m.Called(otpDomain)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Otp) error); ok {
		r0 = rf(otpDomain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOtpUsecase interface {
	mock.TestingT
	Cleanup(func())
}

// NewOtpUsecase creates a new instance of OtpUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOtpUsecase(t mockConstructorTestingTNewOtpUsecase) *OtpUsecase {
	mock := &OtpUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
